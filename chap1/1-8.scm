(define (cubic x)
  (cubic-iter 2.0 x))
(define (cubic-iter guess x)
  (if (cub-good-enough? guess x)
    guess
    (cubic-iter (cub-improve guess x)
		x)))
(define (cub-improve guess x)
  (cub-average (* 2 guess) (/ x (square guess))))
(define (cub-good-enough? guess x)
  (< (abs (- (cub-square guess) x)) 0.0001))
(define (cub-square x)
  (* x x x))
(define (cub-average x y)
  (/ (+ x y) 3))

(define (square x)
  (* x x))
(begin (display (cubic 10)) (newline))
(begin (display (cub-square (cubic 10))) (newline))
