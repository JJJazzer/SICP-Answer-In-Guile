(define (circum height width)
  (* 2 (+ height width)))

(define (area height width)
  (* height width))

(define (len start-seg end-seg)
  (sqrt (abs (-
  (square (- (x-point end-seg) (x-point start-seg)))
  (square (- (y-point end-seg) (y-point start-seg)))))))

(define (make-segment start end)
  (cons start end))

(define (start-segment segment)
  (car segment))
(define (end-segment segment)
  (cdr segment))

(define (make-point x y)
  (cons x y))
(define (x-point point)
  (car point))
(define (y-point point)
  (cdr point))
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")")
  (newline))

(define (square x)
  (* x x))

(let ((start (make-segment (make-point 4 1) (make-point 2 1)))
      (end   (make-segment (make-point 2 1) (make-point 2 3))))
(let ((hei (len    (start-segment start) 
		   (end-segment   start)))
      (wid (len    (start-segment  end)
		   (end-segment    end))))
  (begin (display "height: ")
	 (display hei)
	 (newline)
	 (display "width: ")
	 (display wid)
	 (newline)
    	 (display "circumference: ")
	 (display (circum hei wid)) 
	 (display "cm")
	 (newline)
	 (display "area: ")
	 (display (area hei wid))
	 (display "m^2")
	 (newline))))
