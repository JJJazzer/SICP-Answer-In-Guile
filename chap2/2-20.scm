(define (same-parity . w)
  (define (helper lst newlist first)
      (if (null? lst)
	newlist
	(if (even? first)
	  (if (odd? (car lst))
	    (helper (cdr lst) newlist first)
            (cons (car lst) (helper (cdr lst) newlist first)))
	  (if (even? (car lst))
	    (helper (cdr lst) newlist first)
	    (cons (car lst) (helper (cdr lst) newlist first))))))
  (helper w '() (car w)))
(display (same-parity 2 3 4 5 6 7)) (newline)
(display (same-parity 1 3 4 5 6 7)) (newline)
(display (same-parity 1 2 3 4 5 6 7)) (newline)
